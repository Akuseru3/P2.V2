/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package p2.v2;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Akuseru
 */
public class configWindow extends javax.swing.JFrame {

    /** Creates new form configWindow */
    public configWindow() {
        initComponents();
        panelFixed.setVisible(false);
        panelSegmentation.setVisible(false);
        txtQuantum.setVisible(false);
        lblQuantum.setVisible(false);
        boxMemory.setSelectedIndex(0);
        boxCPU.setSelectedIndex(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLoad1 = new javax.swing.JButton();
        lblQuantum = new javax.swing.JLabel();
        boxCPU = new javax.swing.JComboBox<>();
        boxMemory = new javax.swing.JComboBox<>();
        panelSegmentation = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listSegments = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnRemoveSegment1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listSegmentVirtual = new javax.swing.JList<>();
        txtSegmentVirtual = new javax.swing.JTextField();
        btnAddSegment1 = new javax.swing.JButton();
        txtSegment = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        btnRemoveSegment = new javax.swing.JButton();
        btnAddSegment = new javax.swing.JButton();
        lblBG2 = new javax.swing.JLabel();
        panelFixed = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtPartition = new javax.swing.JTextField();
        lblBG1 = new javax.swing.JLabel();
        panelPaging = new javax.swing.JPanel();
        txtPageSize = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lblBG4 = new javax.swing.JLabel();
        panelBase = new javax.swing.JPanel();
        lblBG3 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblFile = new javax.swing.JLabel();
        btnLoad = new javax.swing.JButton();
        txtHDDSize = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtQuantum = new javax.swing.JTextField();
        txtMemory = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblBG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Configuration");
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnLoad1.setBackground(new java.awt.Color(0, 204, 102));
        btnLoad1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLoad1.setForeground(new java.awt.Color(255, 255, 255));
        btnLoad1.setText("Finish Configuration");
        btnLoad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoad1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnLoad1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 500, 220, 60));

        lblQuantum.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblQuantum.setForeground(new java.awt.Color(255, 255, 255));
        lblQuantum.setText("Quantum");
        getContentPane().add(lblQuantum, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 490, -1, -1));

        boxCPU.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        boxCPU.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FCFS", "SJF", "RR", "Feedback", "HRRN", "Prioritary" }));
        boxCPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCPUActionPerformed(evt);
            }
        });
        getContentPane().add(boxCPU, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 530, 180, 30));

        boxMemory.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        boxMemory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fixed", "Dynamic", "Paging", "Segmentation" }));
        boxMemory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxMemoryActionPerformed(evt);
            }
        });
        getContentPane().add(boxMemory, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, 150, 30));

        panelSegmentation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(114, 137, 218), 2));
        panelSegmentation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Segment size");
        panelSegmentation.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        listSegments.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(listSegments);

        panelSegmentation.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 160, 130));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(114, 137, 218));
        jLabel9.setText("Virtual memory segments");
        panelSegmentation.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Segment size");
        panelSegmentation.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, -1, -1));

        btnRemoveSegment1.setBackground(new java.awt.Color(114, 137, 218));
        btnRemoveSegment1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRemoveSegment1.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveSegment1.setText("Remove segment");
        btnRemoveSegment1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSegment1ActionPerformed(evt);
            }
        });
        panelSegmentation.add(btnRemoveSegment1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, 160, 30));

        listSegmentVirtual.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jScrollPane2.setViewportView(listSegmentVirtual);

        panelSegmentation.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 90, 160, 130));

        txtSegmentVirtual.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSegmentVirtual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSegmentVirtualActionPerformed(evt);
            }
        });
        panelSegmentation.add(txtSegmentVirtual, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 160, 30));

        btnAddSegment1.setBackground(new java.awt.Color(114, 137, 218));
        btnAddSegment1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddSegment1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddSegment1.setText("New segment");
        btnAddSegment1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSegment1ActionPerformed(evt);
            }
        });
        panelSegmentation.add(btnAddSegment1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, 160, 30));

        txtSegment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSegment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSegmentActionPerformed(evt);
            }
        });
        panelSegmentation.add(txtSegment, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 160, 30));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        panelSegmentation.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 10, 210));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(114, 137, 218));
        jLabel4.setText("Main memory segments");
        panelSegmentation.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, -1));

        btnRemoveSegment.setBackground(new java.awt.Color(114, 137, 218));
        btnRemoveSegment.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRemoveSegment.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveSegment.setText("Remove segment");
        btnRemoveSegment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSegmentActionPerformed(evt);
            }
        });
        panelSegmentation.add(btnRemoveSegment, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 160, 30));

        btnAddSegment.setBackground(new java.awt.Color(114, 137, 218));
        btnAddSegment.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddSegment.setForeground(new java.awt.Color(255, 255, 255));
        btnAddSegment.setText("New segment");
        btnAddSegment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSegmentActionPerformed(evt);
            }
        });
        panelSegmentation.add(btnAddSegment, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 160, 30));

        lblBG2.setBackground(new java.awt.Color(44, 47, 51));
        lblBG2.setOpaque(true);
        panelSegmentation.add(lblBG2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 806, 226));

        getContentPane().add(panelSegmentation, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 810, 230));

        panelFixed.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(114, 137, 218), 2));
        panelFixed.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Partition size");
        panelFixed.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, -1, -1));

        txtPartition.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtPartition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartitionActionPerformed(evt);
            }
        });
        panelFixed.add(txtPartition, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 160, 30));

        lblBG1.setBackground(new java.awt.Color(44, 47, 51));
        lblBG1.setOpaque(true);
        panelFixed.add(lblBG1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 806, 226));

        getContentPane().add(panelFixed, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 810, 230));

        panelPaging.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(114, 137, 218), 2));
        panelPaging.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPageSize.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtPageSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPageSizeActionPerformed(evt);
            }
        });
        panelPaging.add(txtPageSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 160, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Paging size");
        panelPaging.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        lblBG4.setBackground(new java.awt.Color(44, 47, 51));
        lblBG4.setOpaque(true);
        panelPaging.add(lblBG4, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 807, 226));

        getContentPane().add(panelPaging, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 810, 230));

        panelBase.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(114, 137, 218), 2));

        lblBG3.setBackground(new java.awt.Color(44, 47, 51));
        lblBG3.setOpaque(true);

        javax.swing.GroupLayout panelBaseLayout = new javax.swing.GroupLayout(panelBase);
        panelBase.setLayout(panelBaseLayout);
        panelBaseLayout.setHorizontalGroup(
            panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelBaseLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblBG3, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelBaseLayout.setVerticalGroup(
            panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 226, Short.MAX_VALUE)
            .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelBaseLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblBG3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(panelBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 810, 230));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Memory assignment");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, -1, -1));

        lblFile.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblFile.setForeground(new java.awt.Color(255, 255, 255));
        lblFile.setText("File: ");
        getContentPane().add(lblFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 100, -1, -1));

        btnLoad.setBackground(new java.awt.Color(114, 137, 218));
        btnLoad.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLoad.setForeground(new java.awt.Color(255, 255, 255));
        btnLoad.setText("Load File");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });
        getContentPane().add(btnLoad, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 140, 220, 30));

        txtHDDSize.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtHDDSize.setText("1024");
        txtHDDSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHDDSizeActionPerformed(evt);
            }
        });
        getContentPane().add(txtHDDSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 140, 220, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Virtual memory size");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, -1, -1));

        txtQuantum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtQuantum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantumActionPerformed(evt);
            }
        });
        getContentPane().add(txtQuantum, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 530, 180, 30));

        txtMemory.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtMemory.setText("128");
        txtMemory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMemoryActionPerformed(evt);
            }
        });
        getContentPane().add(txtMemory, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 220, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Memory size");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("CPU assignment");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, -1, -1));

        lblBG.setBackground(new java.awt.Color(44, 47, 51));
        lblBG.setOpaque(true);
        getContentPane().add(lblBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMemoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMemoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMemoryActionPerformed
    List<String> code = new ArrayList<String>();
    List<String[]> finalCode = new ArrayList<String[]>();
    private boolean validateCode(){
        
        for(int i=0;i<code.size();i++){
            String[] line = code.get(i).split(";");            
            if(line.length!=5){
                return false;                
            }
            try{
                String[] newLine = {line[0].trim(),line[1].trim(),line[2].trim(),line[3].trim(),line[4].trim()};
                Integer.parseInt(newLine[1]);
                Integer.parseInt(newLine[2]);
                Integer.parseInt(newLine[3]);
                Integer.parseInt(newLine[4]);
                finalCode.add(newLine);
            }
            catch(Exception e){
                return false;
            }
        }
        return true;
    };
    
    private void txtHDDSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHDDSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHDDSizeActionPerformed
    
    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        code.clear();
        finalCode.clear();
        lblFile.setText("File: ");
        if(checkMemory()){
            memorySize=Integer.parseInt(txtMemory.getText());
            virtualSize = Integer.parseInt(txtHDDSize.getText());
        }else{
            JOptionPane.showMessageDialog(null, "Not valid memories sizes");
            return;
        }
        partitionsList.clear();
        segmentList.clear();
        segmentListVirtual.clear();
        DefaultListModel<String> model = new DefaultListModel<>();        
        listSegments.setModel(model);
        listSegmentVirtual.setModel(model);
        
        
        JFileChooser fileChooser = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("ASM Files","cpu");
        fileChooser.setFileFilter(filter);
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();            
            try {
                code = Files.readAllLines(selectedFile.toPath());
                if(validateCode()){
                    lblFile.setText("File: "+selectedFile.getName());
                }else{
                    JOptionPane.showMessageDialog(null, "Not a valid file");
                }
            } catch (IOException ex) {
                Logger.getLogger(configWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnLoadActionPerformed
    String memoryType ="";
    String cpuType ="";
    int quantum=-1;
    private void btnLoad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoad1ActionPerformed
        if(checkMemory() && !(lblFile.getText().trim().equals("File:"))){
            if(cpuType.equals("RR")||cpuType.equals("Feedback")){
                try{
                    int quantumEntry = Integer.parseInt(txtQuantum.getText());
                    if(quantumEntry<=0){
                        JOptionPane.showMessageDialog(null, "Please, insert a valid quantum");
                        return;
                    }
                    else
                        quantum = quantumEntry;
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please, insert a valid quantum");
                    return;
                }
            }
            if(memoryType.equals("Fixed")){
                //this.setVisible(false);                
                try{
                    int partitionSize = Integer.parseInt(txtPartition.getText().trim());
                    if(partitionSize>0){
                        mainWindow newWindow =new mainWindow(finalCode,partitionSize,memoryType,partitionsList,cpuType,quantum,Integer.parseInt(txtMemory.getText()),Integer.parseInt(txtHDDSize.getText()));
                        newWindow.setVisible(true);
                        this.dispose();
                    }else
                        JOptionPane.showMessageDialog(null, "Please, insert a valid partition size");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please, insert a valid partition size");
                }
            }else if(memoryType.equals("Segmentation")){
                if(segmentList.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please, insert the correct segments of the main memory");
                    return;
                }else if(segmentListVirtual.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please, insert the correct segments of the virtual memory");
                    return;
                }
                else{
                    if(memorySize>0)
                        segmentList.add(memorySize);
                    if(virtualSize>0)
                        segmentListVirtual.add(virtualSize);
                    
                    
                    mainWindow newWindow =new mainWindow(finalCode,-1,memoryType,segmentList,segmentListVirtual,cpuType,quantum,Integer.parseInt(txtMemory.getText()),Integer.parseInt(txtHDDSize.getText()));
                    newWindow.setVisible(true);
                    this.dispose();
                }
            }else if(memoryType.equals("Paging")){
                try{
                    int pageSize = Integer.parseInt(txtPageSize.getText().trim());
                    if(pageSize>0){
                        mainWindow newWindow =new mainWindow(finalCode,pageSize,memoryType,partitionsList,cpuType,quantum,Integer.parseInt(txtMemory.getText()),Integer.parseInt(txtHDDSize.getText()));
                        newWindow.setVisible(true);
                        this.dispose();
                    }else
                        JOptionPane.showMessageDialog(null, "Please, insert a valid page size");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please, insert a valid page size");
                }
            }
            else{
                this.dispose();
                mainWindow newWindow =new mainWindow(finalCode,-1,memoryType,partitionsList,cpuType,quantum,Integer.parseInt(txtMemory.getText()),Integer.parseInt(txtHDDSize.getText()));
                newWindow.setVisible(true);
                this.dispose();
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Please, insert correct memory sizes and a valid file.");
        }
    }//GEN-LAST:event_btnLoad1ActionPerformed
    
    private void boxMemoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxMemoryActionPerformed
        memoryType = boxMemory.getSelectedItem().toString();
        if(boxMemory.getSelectedItem().toString().equals("Fixed")){
            panelBase.setVisible(false);
            panelSegmentation.setVisible(false);
            panelPaging.setVisible(false);
            panelFixed.setVisible(true);
        }else if(boxMemory.getSelectedItem().toString().equals("Segmentation")){
            panelBase.setVisible(false);
            panelSegmentation.setVisible(true);
            panelPaging.setVisible(false);
            panelFixed.setVisible(false);
        }else if(boxMemory.getSelectedItem().toString().equals("Paging")){
            panelBase.setVisible(false);
            panelSegmentation.setVisible(false);
            panelPaging.setVisible(true);
            panelFixed.setVisible(false);
        }
        else{
            panelBase.setVisible(true);
            panelSegmentation.setVisible(false);
            panelPaging.setVisible(false);
            panelFixed.setVisible(false);
        }
    }//GEN-LAST:event_boxMemoryActionPerformed
    ArrayList<Integer> segmentList = new ArrayList<Integer>();
    ArrayList<Integer> segmentListVirtual = new ArrayList<Integer>();
    ArrayList<Integer> partitionsList = new ArrayList<Integer>();
    int memorySize =0;int finalMemorySize=0;
    int virtualSize =0;
    private boolean checkMemory(){
        String mainMemory = txtMemory.getText();
        String virtualMemory = txtHDDSize.getText();
        try{
            Integer.parseInt(mainMemory);
            Integer.parseInt(virtualMemory);
            if(memorySize==0 && virtualSize==0){
                memorySize = Integer.parseInt(mainMemory);
                virtualSize = Integer.parseInt(virtualMemory);
            }
            return true;
        }catch(Exception e){
            return false;
        }
    }
    
    private void txtSegmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSegmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSegmentActionPerformed
    
    private void btnAddSegmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSegmentActionPerformed
        if(checkMemory()){
            String segment = txtSegment.getText().trim();
            try{
                int segmentSize = Integer.parseInt(segment);
                if((memorySize-segmentSize)>=0){
                    memorySize= memorySize-segmentSize;
                    //System.out.println(memorySize);
                    DefaultListModel<String> model = new DefaultListModel<>();
                    int i;
                    for(i=0;i<segmentList.size();i++){
                        model.addElement("Segment "+(i+1)+" | Size-> "+segmentList.get(i));                
                    }
                    model.addElement("Segment "+(i+1)+" | Size-> "+Integer.toString(segmentSize));
                    segmentList.add(segmentSize);
                    listSegments.setModel(model);
                }else{
                    JOptionPane.showMessageDialog(null, "Can't add more segments");
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Not a valid segment");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please, define correct sizes for the memories.");
        }
    }//GEN-LAST:event_btnAddSegmentActionPerformed

    private void btnRemoveSegmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSegmentActionPerformed
        if(listSegments.getSelectedIndex()!=-1){
            int size=segmentList.get(listSegments.getSelectedIndex());
            memorySize+=size;
            segmentList.remove(listSegments.getSelectedIndex());
            DefaultListModel<String> model = new DefaultListModel<>();
            for(int i=0;i<segmentList.size();i++){
                model.addElement("Segment "+(i+1)+" | Size-> "+segmentList.get(i));                
            }
            listSegments.setModel(model);
        }else{
            JOptionPane.showMessageDialog(null, "No segment selected");
        }
    }//GEN-LAST:event_btnRemoveSegmentActionPerformed

    private void txtPartitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartitionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartitionActionPerformed

    private void txtQuantumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantumActionPerformed
    
    private void boxCPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCPUActionPerformed
        cpuType = boxCPU.getSelectedItem().toString();
        if(boxCPU.getSelectedItem().toString().equals("RR")||boxCPU.getSelectedItem().toString().equals("Feedback") ){
            txtQuantum.setVisible(true);
            lblQuantum.setVisible(true);
        }else{
            txtQuantum.setVisible(false);
            lblQuantum.setVisible(false);
        }
    }//GEN-LAST:event_boxCPUActionPerformed

    private void txtPageSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPageSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPageSizeActionPerformed

    private void btnRemoveSegment1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSegment1ActionPerformed
        int size=segmentList.get(listSegments.getSelectedIndex());
        memorySize+=size;
        if(listSegmentVirtual.getSelectedIndex()!=-1){
            segmentListVirtual.remove(listSegmentVirtual.getSelectedIndex());
            DefaultListModel<String> model = new DefaultListModel<>();
            for(int i=0;i<segmentListVirtual.size();i++){
                model.addElement("Segment "+(i+1)+" | Size-> "+segmentListVirtual.get(i));                
            }
            listSegmentVirtual.setModel(model);
        }else{
            JOptionPane.showMessageDialog(null, "No segment selected");
        }
    }//GEN-LAST:event_btnRemoveSegment1ActionPerformed

    private void txtSegmentVirtualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSegmentVirtualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSegmentVirtualActionPerformed

    private void btnAddSegment1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSegment1ActionPerformed
        if(checkMemory()){
            String segment = txtSegmentVirtual.getText().trim();
            try{
                int segmentSize = Integer.parseInt(segment);
                if((virtualSize-segmentSize)>=0){
                    virtualSize= virtualSize-segmentSize;
                    //System.out.println(virtualSize);
                    DefaultListModel<String> model = new DefaultListModel<>();
                    int i;
                    for(i=0;i<segmentListVirtual.size();i++){
                        model.addElement("Segment "+(i+1)+" | Size-> "+segmentListVirtual.get(i));                
                    }
                    model.addElement("Segment "+(i+1)+" | Size-> "+Integer.toString(segmentSize));
                    segmentListVirtual.add(segmentSize);
                    listSegmentVirtual.setModel(model);
                }else{
                    JOptionPane.showMessageDialog(null, "Can't add more segments");
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Not a valid segment");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please, define correct sizes for the memories.");
        }
    }//GEN-LAST:event_btnAddSegment1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(configWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(configWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(configWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(configWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new configWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCPU;
    private javax.swing.JComboBox<String> boxMemory;
    private javax.swing.JButton btnAddSegment;
    private javax.swing.JButton btnAddSegment1;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnLoad1;
    private javax.swing.JButton btnRemoveSegment;
    private javax.swing.JButton btnRemoveSegment1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBG;
    private javax.swing.JLabel lblBG1;
    private javax.swing.JLabel lblBG2;
    private javax.swing.JLabel lblBG3;
    private javax.swing.JLabel lblBG4;
    private javax.swing.JLabel lblFile;
    private javax.swing.JLabel lblQuantum;
    private javax.swing.JList<String> listSegmentVirtual;
    private javax.swing.JList<String> listSegments;
    private javax.swing.JPanel panelBase;
    private javax.swing.JPanel panelFixed;
    private javax.swing.JPanel panelPaging;
    private javax.swing.JPanel panelSegmentation;
    private javax.swing.JTextField txtHDDSize;
    private javax.swing.JTextField txtMemory;
    private javax.swing.JTextField txtPageSize;
    private javax.swing.JTextField txtPartition;
    private javax.swing.JTextField txtQuantum;
    private javax.swing.JTextField txtSegment;
    private javax.swing.JTextField txtSegmentVirtual;
    // End of variables declaration//GEN-END:variables

}
